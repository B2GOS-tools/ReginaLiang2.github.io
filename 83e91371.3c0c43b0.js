(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{245:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return s}));var a=t(3),o=t(8),r=(t(0),t(396)),i={id:"other-AudioChannelClient",title:"AudioChannelClient"},l={unversionedId:"09.migration-from-2.5/next-new-apis/others/AudioChannelClient/other-AudioChannelClient",id:"version-sfp-3.0/09.migration-from-2.5/next-new-apis/others/AudioChannelClient/other-AudioChannelClient",isDocsHomePage:!1,title:"AudioChannelClient",description:"Description",source:"@site/versioned_docs/version-sfp-3.0/09.migration-from-2.5/next-new-apis/others/AudioChannelClient/readme.md",slug:"/09.migration-from-2.5/next-new-apis/others/AudioChannelClient/other-AudioChannelClient",permalink:"/docs/sfp-3.0/09.migration-from-2.5/next-new-apis/others/AudioChannelClient/other-AudioChannelClient",version:"sfp-3.0"},c=[{value:"Description",id:"description",children:[]},{value:"Interfaces",id:"interfaces",children:[]},{value:"Examples",id:"examples",children:[]}],u={rightToc:c};function s(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"description"},"Description"),Object(r.b)("p",null,"TBD"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"interfaces"},"Interfaces"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp"}),"interface AudioChannelClient : EventTarget {\n  [Throws]\n  constructor(AudioChannel aChannel);\n\n  // Called when APP wants to occupy the audio channel which is specified in the\n  // constructor. After calling this function, it doesn't mean that this channel\n  // is immediately unmuted. APP may want to hook onstatechange handler in order\n  // to be notified when muted state changes.\n  // This function is useful for APP which wants background music/FM to be\n  // muted.\n  [Throws]\n  void requestChannel();\n\n  // Called when APP no longer wants to occupy the audio channel. APP must call\n  // this function if it has called requestChannel().\n  [Throws]\n  void abandonChannel();\n\n  // This event is dispatched when muted state changes. APP should check\n  // channelMuted attribute to know current muted state.\n  attribute EventHandler onstatechange;\n\n  // When channelMuted is false, it means APP is allowed to play content through\n  // this channel. It also means the competing channel may be muted, or its\n  // volume may be reduced.\n  // If the channel owned by us is suspended (muted), or APP did not request\n  // channel, or APP has abandoned the channel, channelMuted is set to true.\n  readonly attribute boolean channelMuted;\n};\n")),Object(r.b)("hr",null),Object(r.b)("h2",{id:"examples"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"navigator.b2g.AudioChannelManager.volumeControlChannel = 'normal'\nAudioChannelClient('normal')\nHTMLMediaElement.mozAudioChannelType = 'normal'\nAudioContext.mozAudioChannelType = 'normal'\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"navigator.b2g.AudioChannelManager.volumeControlChannel = 'content'\nAudioChannelClient('content')\nHTMLMediaElement.mozAudioChannelType = 'content'\nAudioContext.mozAudioChannelType = 'content'\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"navigator.b2g.AudioChannelManager.volumeControlChannel = 'notification'\nAudioChannelClient('notification')\nHTMLMediaElement.mozAudioChannelType = 'notification'\nAudioContext.mozAudioChannelType = 'notification'\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"navigator.b2g.AudioChannelManager.volumeControlChannel = 'alarm'\nAudioChannelClient('alarm')\nHTMLMediaElement.mozAudioChannelType = 'alarm'\nAudioContext.mozAudioChannelType = 'alarm'\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"navigator.b2g.AudioChannelManager.volumeControlChannel = 'system'\nAudioChannelClient('system')\nHTMLMediaElement.mozAudioChannelType = 'system'\nAudioContext.mozAudioChannelType = 'system'\n")))}s.isMDXComponent=!0},396:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),s=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),p=a,m=d["".concat(i,".").concat(p)]||d[p]||h[p]||r;return t?o.a.createElement(m,l(l({ref:n},u),{},{components:t})):o.a.createElement(m,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=t[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);