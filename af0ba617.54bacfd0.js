(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{293:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(8),i=(n(0),n(396)),o={id:"getsamples",title:"MozNetworkStatsManager.getSamples()"},s={unversionedId:"06.api/web-apis/networkStats/moznetworkstatsmanager/getsamples",id:"06.api/web-apis/networkStats/moznetworkstatsmanager/getsamples",isDocsHomePage:!1,title:"MozNetworkStatsManager.getSamples()",description:"Description",source:"@site/docs/06.api/web-apis/networkStats/moznetworkstatsmanager/getsamples.md",slug:"/06.api/web-apis/networkStats/moznetworkstatsmanager/getsamples",permalink:"/docs/06.api/web-apis/networkStats/moznetworkstatsmanager/getsamples",version:"current"},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Parameters",id:"parameters",children:[{value:"network",id:"network",children:[]},{value:"start",id:"start",children:[]},{value:"end",id:"end",children:[]},{value:"options",id:"options",children:[]}]},{value:"Return",id:"return",children:[]},{value:"Exceptions",id:"exceptions",children:[{value:"NS_ERROR_INVALID_ARG",id:"ns_error_invalid_arg",children:[]},{value:"NS_ERROR_NOT_IMPLMENTED",id:"ns_error_not_implmented",children:[]},{value:"InvalidNetwork",id:"invalidnetwork",children:[]}]}],l={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"The getSamples method asynchronously queries network interface statistics. The query may be filtered by connection type and date."),Object(i.b)("p",null,"A data usage chunk is a MozNetworkStatsData object representing the total number of bits received and sent during the amount of time defined by the sampleRate property."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"var samples = getSamples(network, start, end, options);\n\nsamples.onsuccess = function() {\n  // do something with samples.result\n}\n")),Object(i.b)("h2",{id:"parameters"},"Parameters"),Object(i.b)("h3",{id:"network"},"network"),Object(i.b)("p",null,"The origin of the data; it can be specified as wifi or mobile. If null, data measurement from both origins are merged. To know in advance which kind of origin is available, the MozNetworkStatsManager.getAvailableNetworks method returns an Array of interfaces."),Object(i.b)("h3",{id:"start"},"start"),Object(i.b)("p",null,"A Date object representing the beginning of data measurement."),Object(i.b)("h3",{id:"end"},"end"),Object(i.b)("p",null,"A Date object representing the end of data measurement."),Object(i.b)("h3",{id:"options"},"options"),Object(i.b)("p",null,"Filtering options.",Object(i.b)("br",{parentName:"p"}),"\n","NetworkStatsGetOptions is a dictionary object providing filtering options."),Object(i.b)("h2",{id:"return"},"Return"),Object(i.b)("p",null,"A DOMRequest object. If successful, the request result is a MozNetworkStats object describing the network statistics. If network stats are not available for some dates, then rxBytes and txBytes are undefined for those dates. If the filtering start date is greater than the end date, an exception is thrown."),Object(i.b)("h2",{id:"exceptions"},"Exceptions"),Object(i.b)("h3",{id:"ns_error_invalid_arg"},"NS_ERROR_INVALID_ARG"),Object(i.b)("p",null,"The filtering start date is greater than the end date."),Object(i.b)("h3",{id:"ns_error_not_implmented"},"NS_ERROR_NOT_IMPLMENTED"),Object(i.b)("p",null,"Both appManifestURL and serviceType are specified at the same time in the NetworkStatsGetOptions dictionary."),Object(i.b)("h3",{id:"invalidnetwork"},"InvalidNetwork"),Object(i.b)("p",null,"The network must be in the return of MozNetworkStatsManager.getAvailableNetworks. "))}p.isMDXComponent=!0},396:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||u[b]||i;return n?a.a.createElement(m,s(s({ref:t},l),{},{components:n})):a.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);