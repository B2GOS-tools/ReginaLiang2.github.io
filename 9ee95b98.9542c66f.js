(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{277:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return p})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return c}));var n=r(3),a=r(8),o=(r(0),r(396)),s={id:"other-XMLHttpRequest",title:"XMLHttpRequest"},p={unversionedId:"09.migration-from-2.5/next-new-apis/others/XMLHttpRequest/other-XMLHttpRequest",id:"version-sfp-3.0/09.migration-from-2.5/next-new-apis/others/XMLHttpRequest/other-XMLHttpRequest",isDocsHomePage:!1,title:"XMLHttpRequest",description:"Ref MDN XMLHttpRequest",source:"@site/versioned_docs/version-sfp-3.0/09.migration-from-2.5/next-new-apis/others/XMLHttpRequest/readme.md",slug:"/09.migration-from-2.5/next-new-apis/others/XMLHttpRequest/other-XMLHttpRequest",permalink:"/docs/sfp-3.0/09.migration-from-2.5/next-new-apis/others/XMLHttpRequest/other-XMLHttpRequest",version:"sfp-3.0"},b=[{value:"Ref MDN XMLHttpRequest",id:"ref-mdn-xmlhttprequest",children:[]},{value:"Description",id:"description",children:[]},{value:"Constructor",id:"constructor",children:[]},{value:"Properties",id:"properties",children:[{value:"Non-standard properties",id:"non-standard-properties",children:[]},{value:"Event handlers",id:"event-handlers",children:[]}]},{value:"Methods",id:"methods",children:[{value:"Non-standard methods",id:"non-standard-methods",children:[]}]},{value:"Events",id:"events",children:[]}],l={rightToc:b};function c(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"ref-mdn-xmlhttprequest"},"Ref ",Object(o.b)("a",Object(n.a)({parentName:"h2"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"}),"MDN XMLHttpRequest")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"XMLHttpRequest")," (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh.\nThis enables a Web page to update just part of a page without disrupting what the user is doing. XMLHttpRequest is used heavily in AJAX programming."),Object(o.b)("figure",{class:"video_container"},Object(o.b)("iframe",{src:"https://mdn.mozillademos.org/en-US/docs/Web/API/XMLHttpRequest$samples/inheritance_diagram?revision=1624669",width:"650"}," ")),Object(o.b)("p",null,"Despite its name, ",Object(o.b)("em",{parentName:"p"},"XMLHttpRequest")," can be used to retrieve any type of data, not just XML."),Object(o.b)("p",null,"If your communication needs to involve receiving event data or message data from a server, consider using ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events"}),"server-sent")," events through the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventSource"}),"EventSource")," interface.\nFor full-duplex communication, ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"}),"WebSockets")," may be a better choice."),Object(o.b)("h2",{id:"constructor"},"Constructor"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/XMLHttpRequest"}),Object(o.b)("strong",{parentName:"a"},"XMLHttpRequest"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","The constructor initializes an XMLHttpRequest. It must be called before any other method calls."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"This interface also inherits properties of ",Object(o.b)("a",Object(n.a)({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget"}),"XMLHttpRequestEventTarget")," and of ",Object(o.b)("a",Object(n.a)({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget"}),"EventTarget"),".")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange"}),"XMLHttpRequest.onreadystatechange"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","An ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventHandler"}),"EventHandler")," that is called whenever the readyState attribute changes."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState"}),"XMLHttpRequest.readyState"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns an unsigned short, the state of the request."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response"}),"XMLHttpRequest.response"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns an ArrayBuffer, Blob, Document, JavaScript object, or a DOMString,\ndepending on the value of XMLHttpRequest.responseType, that contains the response entity body."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText"}),"XMLHttpRequest.responseText")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a DOMString that contains the response to the request as text, or null if the request was unsuccessful or has not yet been sent."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType"}),"XMLHttpRequest.responseType"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is an enumerated value that defines the response type."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL"}),"XMLHttpRequest.responseURL")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns the serialized URL of the response or the empty string if the URL is null."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML"}),"XMLHttpRequest.responseXML")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a Document containing the response to the request, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML. Not available in workers."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status"}),"XMLHttpRequest.status")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns an unsigned short with the status of the response of the request."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/statusText"}),"XMLHttpRequest.statusText")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",'Returns a DOMString containing the response string returned by the HTTP server. Unlike XMLHttpRequest.status, this includes the entire text of the response message ("200 OK", for example).'),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout"}),"XMLHttpRequest.timeout"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is an unsigned long representing the number of milliseconds a request can take before automatically being terminated."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"XMLHttpRequestEventTarget.ontimeout")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is an EventHandler that is called whenever the request times out."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/upload"}),"XMLHttpRequest.upload")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is an XMLHttpRequestUpload, representing the upload process."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials"}),"XMLHttpRequest.withCredentials"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is a Boolean that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers."),Object(o.b)("h3",{id:"non-standard-properties"},"Non-standard properties"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/channel"}),"XMLHttpRequest.channel")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is a nsIChannel. The channel used by the object when performing the request."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/mozAnon"}),"XMLHttpRequest.mozAnon")," Read only")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is a boolean. If true, the request will be sent without cookie and authentication headers."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/mozSystem"}),"XMLHttpRequest.mozSystem")," Read only")," "),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is a boolean. If true, the same origin policy will not be enforced on the request."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/mozBackgroundRequest"}),"XMLHttpRequest.mozBackgroundRequest"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Is a boolean. It indicates whether or not the object represents a background service request."),Object(o.b)("h3",{id:"event-handlers"},"Event handlers"),Object(o.b)("p",null,"onreadystatechange as a property of the XMLHttpRequest instance is supported in all browsers."),Object(o.b)("p",null,"Since then, a number of additional event handlers have been implemented in various browsers (onload, onerror, onprogress, etc.). See Using XMLHttpRequest."),Object(o.b)("p",null,"More recent browsers, including Firefox, also support listening to the XMLHttpRequest events via standard addEventListener() APIs in addition to setting on* properties to a handler function."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort"}),"XMLHttpRequest.abort()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Aborts the request if it has already been sent."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders"}),"XMLHttpRequest.getAllResponseHeaders()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns all the response headers, separated by CRLF, as a string, or null if no response has been received."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader"}),"XMLHttpRequest.getResponseHeader()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns the string containing the text of the specified header, or null if either the response has not yet been received or the header doesn't exist in the response."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open"}),"XMLHttpRequest.open()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Initializes a request."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/overrideMimeType"}),"XMLHttpRequest.overrideMimeType()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Overrides the MIME type returned by the server."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send"}),"XMLHttpRequest.send()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader"}),"XMLHttpRequest.setRequestHeader()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Sets the value of an HTTP request header. You must call setRequestHeader()after open(), but before send()."),Object(o.b)("h3",{id:"non-standard-methods"},"Non-standard methods"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"XMLHttpRequest.init()")),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Initializes the object for use from C++ code.\n",Object(o.b)("strong",{parentName:"p"},"Warning: This method must not be called from JavaScript.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/openRequest"}),"XMLHttpRequest.openRequest()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Initializes a request. This method is to be used from native code; to initialize a request from JavaScript code, use open() instead. See the documentation for open()."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/sendAsBinary"}),"XMLHttpRequest.sendAsBinary()"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","A variant of the send() method that sends binary data."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"events"},"Events"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event"}),"abort"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when a request has been aborted, for example because the program called XMLHttpRequest.abort().\nAlso available via the onabort property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event"}),"error"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when the request encountered an error.\nAlso available via the onerror property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event"}),"load"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when an XMLHttpRequest transaction completes successfully.\nAlso available via the onload property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadend_event"}),"loadend"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when a request has completed, whether successfully (after load) or unsuccessfully (after abort or error).\nAlso available via the onloadend property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadstart_event"}),"loadstart"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when a request has started to load data.\nAlso available via the onloadstart property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event"}),"progress"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired periodically when a request receives more data.\nAlso available via the onprogress property."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout_event"}),"timeout"))),Object(o.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Fired when progress is terminated due to preset time expiring.\nAlso available via the ontimeout property."))}c.isMDXComponent=!0},396:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return h}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),c=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},i=function(e){var t=c(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),i=c(r),d=n,h=i["".concat(s,".").concat(d)]||i[d]||u[d]||o;return r?a.a.createElement(h,p(p({ref:t},l),{},{components:r})):a.a.createElement(h,p({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var p={};for(var b in t)hasOwnProperty.call(t,b)&&(p[b]=t[b]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var l=2;l<o;l++)s[l]=r[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);