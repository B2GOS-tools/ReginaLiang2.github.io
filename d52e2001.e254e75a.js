(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{335:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return l}));var n=a(3),r=a(8),b=(a(0),a(396)),i={id:"batterymanager",title:"batteryManager"},c={unversionedId:"06.api/web-apis/batterymanager/batterymanager",id:"06.api/web-apis/batterymanager/batterymanager",isDocsHomePage:!1,title:"batteryManager",description:"Description",source:"@site/docs/06.api/web-apis/batterymanager/batteryManager.md",slug:"/06.api/web-apis/batterymanager/batterymanager",permalink:"/docs/06.api/web-apis/batterymanager/batterymanager",version:"current"},p=[{value:"Description",id:"description",children:[]},{value:"Properties",id:"properties",children:[{value:"Event Handlers",id:"event-handlers",children:[]}]},{value:"Methods",id:"methods",children:[{value:"Additional methods for Mozilla chrome code",id:"additional-methods-for-mozilla-chrome-code",children:[]}]},{value:"Example",id:"example",children:[]}],o={rightToc:p};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"description"},"Description"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"BatteryManager")," interface provides ways to get information about the system's battery charge level."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"navigator.getBattery()")," method returns a battery promise that is resolved in a ",Object(b.b)("inlineCode",{parentName:"p"},"BatteryManager")," interface which you can use to interact with the Battery Status API."),Object(b.b)("h2",{id:"properties"},"Properties"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/charging"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.charging")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only"),"\nA Boolean value indicating whether or not the battery is currently being charged.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/chargingtime"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.chargingTime")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only"),Object(b.b)("br",{parentName:"p"}),"\n","A number representing the remaining time in seconds until the battery is fully charged, or 0 if the battery is already fully charged.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/dischargingtime"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.dischargingTime")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only"),Object(b.b)("br",{parentName:"p"}),"\n","A number representing the remaining time in seconds until the battery is completely discharged and the system will suspend.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/level"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.level")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only"),Object(b.b)("br",{parentName:"p"}),"\n","A number representing the system's battery charge level scaled to a value between 0.0 and 1.0.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/health"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.health")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only")," ",Object(b.b)("em",{parentName:"p"},"Available since v2.5"),"\nThe health status of battery.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/present"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.present")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only")," ",Object(b.b)("em",{parentName:"p"},"Available since v2.5"),"\nA Boolean value indicating whether or not the battery is present")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/temperature"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.temperature")))," ",Object(b.b)("inlineCode",{parentName:"p"},"read-only")," ",Object(b.b)("em",{parentName:"p"},"Available since v2.5"),"\nA number representing the temperature of battery."))),Object(b.b)("h3",{id:"event-handlers"},"Event Handlers"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/onbatteryhealthchange"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.onbatteryhealthchange")))," ",Object(b.b)("em",{parentName:"p"},"Available since v2.5"),"\nA handler for the batteryhealthchange event; This event is sent when the battery health is updated.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/onchargingchange"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.onchargingchange"))),Object(b.b)("br",{parentName:"p"}),"\n","A handler for the chargingchange event; This event is sent when the battery charging state is updated.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/onchargingtimechange"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.onchargingtimechange"))),Object(b.b)("br",{parentName:"p"}),"\n","A handler for the chargingtimechange event; This event is sent when the battery charging time is updated")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/ondischargingtimechange"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.ondischargingtimechange"))),Object(b.b)("br",{parentName:"p"}),"\n","A handler for the dischargingtimechange event; This event is sent when the battery discharging time is updated.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/06.api/web-apis/batterymanager/onlevelchange"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"BatteryManager.onlevelchange"))),Object(b.b)("br",{parentName:"p"}),"\n","A handler for the levelchange event; This event is sent when the battery level is updated."))),Object(b.b)("h2",{id:"methods"},"Methods"),Object(b.b)("p",null,"Inherited from ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"EventTarget"))),":"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"EventTarget.addEventListener()"))),Object(b.b)("br",{parentName:"p"}),"\n","Register an event handler of a specific event type on the EventTarget.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"EventTarget.removeEventListener()"))),Object(b.b)("br",{parentName:"p"}),"\n","Removes an event listener from the EventTarget.")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"}),Object(b.b)("strong",{parentName:"a"},Object(b.b)("inlineCode",{parentName:"strong"},"EventTarget.dispatchEvent()"))),Object(b.b)("br",{parentName:"p"}),"\n","Dispatch an event to this EventTarget."))),Object(b.b)("h3",{id:"additional-methods-for-mozilla-chrome-code"},"Additional methods for Mozilla chrome code"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"void setEventHandler(DOMString type, EventHandler handler)"),Object(b.b)("li",{parentName:"ul"},"EventHandler getEventHandler(DOMString type)")),Object(b.b)("p",null,"Mozilla extensions for use by JS-implemented event targets to implement on* properties. See also ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings"}),"WebIDL bindings"),"."),Object(b.b)("h2",{id:"example"},"Example"))}l.isMDXComponent=!0},396:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),l=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=l(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),s=l(a),d=n,g=s["".concat(i,".").concat(d)]||s[d]||m[d]||b;return a?r.a.createElement(g,c(c({ref:t},o),{},{components:a})):r.a.createElement(g,c({ref:t},o))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var o=2;o<b;o++)i[o]=a[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);