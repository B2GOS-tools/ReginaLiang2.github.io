(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{160:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return c})),t.d(a,"rightToc",(function(){return o})),t.d(a,"default",(function(){return p}));var n=t(3),r=t(8),l=(t(0),t(398)),i={id:"navigator-b2g-dataCallManager",title:"navigator.b2g.dataCallManager"},c={unversionedId:"09.migration-from-2.5/next-new-apis/b2g/dataCallManager/navigator-b2g-dataCallManager",id:"version-sfp-3.0/09.migration-from-2.5/next-new-apis/b2g/dataCallManager/navigator-b2g-dataCallManager",isDocsHomePage:!1,title:"navigator.b2g.dataCallManager",description:"Description",source:"@site/versioned_docs/version-sfp-3.0/09.migration-from-2.5/next-new-apis/b2g/dataCallManager/readme.md",slug:"/09.migration-from-2.5/next-new-apis/b2g/dataCallManager/navigator-b2g-dataCallManager",permalink:"/docs/sfp-3.0/09.migration-from-2.5/next-new-apis/b2g/dataCallManager/navigator-b2g-dataCallManager",version:"sfp-3.0"},o=[{value:"Description",id:"description",children:[]},{value:"Interfaces",id:"interfaces",children:[{value:"Interface Params",id:"interface-params",children:[]}]}],s={rightToc:o};function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"description"},"Description"),Object(l.b)("p",null,"TBD"),Object(l.b)("hr",null),Object(l.b)("h2",{id:"interfaces"},"Interfaces"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-cpp"}),"/**\n   * Request data call for a certain data call type.\n   *\n   * @param type\n   *        The desired data call type, one of the DataCallType values.\n   * @param serviceId [optional]\n   *        Default value is the user setting service id for data call.\n   *\n   * @return If success, promise is resolved with the new created DataCall\n             object. Otherwise, rejected with an error message.\n   */\n  Promise<DataCall> requestDataCall(DataCallType type,\n                                    optional unsigned long serviceId);\n\n  /**\n   * Request the current state of a certain data call type.\n   *\n   * @param type\n   *        The desired data call type, one of the DataCallType values.\n   * @param serviceId [optional]\n   *        Default value is the user setting service id for data call.\n   *\n   * @return If success, promise is resolved with a DataCallState. Otherwise,\n   *         rejected with an error message.\n   */\n  Promise<DataCallState> getDataCallState(DataCallType type,\n                                          optional unsigned long serviceId);\n\n")),Object(l.b)("h3",{id:"interface-params"},"Interface Params"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"DataCallType"))),Object(l.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","The desired data call type."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-cpp"}),'enum DataCallType {\n  "default",\n  "mms",\n  "supl",\n  "ims",\n  "dun",\n  "fota",\n  "hipri",\n  "xcap",\n  "cbs",\n  "Emergency"\n};\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"DataCallState"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-cpp"}),'enum DataCallState {\n  "unknown",\n  "connecting",\n  "connected",\n  "disconnecting",\n  "disconnected",\n  "unavailable"\n};\n')),Object(l.b)("hr",null),Object(l.b)("h1",{id:"examples"},"Examples"),Object(l.b)("p",null,"TBD"))}p.isMDXComponent=!0},398:function(e,a,t){"use strict";t.d(a,"a",(function(){return u})),t.d(a,"b",(function(){return f}));var n=t(0),r=t.n(n);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var a=r.a.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},u=function(e){var a=p(e.components);return r.a.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},b=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(t),b=n,f=u["".concat(i,".").concat(b)]||u[b]||d[b]||l;return t?r.a.createElement(f,c(c({ref:a},s),{},{components:t})):r.a.createElement(f,c({ref:a},s))}));function f(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=b;var c={};for(var o in a)hasOwnProperty.call(a,o)&&(c[o]=a[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<l;s++)i[s]=t[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);