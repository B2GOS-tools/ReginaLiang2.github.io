(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{137:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var i=r(3),a=r(8),n=(r(0),r(396)),o={id:"BluetoothGattCharacteristic",title:"BluetoothGattCharacteristic"},c={unversionedId:"09.migration-from-2.5/next-new-apis/permissionAPIs/BlueTooth/bluetoothgattcharacteristic/BluetoothGattCharacteristic",id:"version-sfp-3.0/09.migration-from-2.5/next-new-apis/permissionAPIs/BlueTooth/bluetoothgattcharacteristic/BluetoothGattCharacteristic",isDocsHomePage:!1,title:"BluetoothGattCharacteristic",description:"Description",source:"@site/versioned_docs/version-sfp-3.0/09.migration-from-2.5/next-new-apis/permissionAPIs/BlueTooth/bluetoothgattcharacteristic/interface.md",slug:"/09.migration-from-2.5/next-new-apis/permissionAPIs/BlueTooth/bluetoothgattcharacteristic/BluetoothGattCharacteristic",permalink:"/docs/sfp-3.0/09.migration-from-2.5/next-new-apis/permissionAPIs/BlueTooth/bluetoothgattcharacteristic/BluetoothGattCharacteristic",version:"sfp-3.0"},s=[{value:"Description",id:"description",children:[]},{value:"Interface overview",id:"interface-overview",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}],l={rightToc:s};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(i.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"description"},"Description"),Object(n.b)("p",null,"The BluetoothGattCharacteristic interface of the Bluetooth API represents a GATT service characteristic, which includes characteristic definition, value, properties and configuration info, and a list of descriptors that provide related information."),Object(n.b)("h2",{id:"interface-overview"},"Interface overview"),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'[CheckAnyPermissions="bluetooth"]\ninterface BluetoothGattCharacteristic\n{\n  readonly attribute BluetoothGattService service;\n  [Cached, Pure] readonly attribute sequence<BluetoothGattDescriptor> descriptors;\n\n  readonly attribute DOMString uuid;\n  readonly attribute unsigned short instanceId;\n  readonly attribute ArrayBuffer? value;\n  [Cached, Constant] readonly attribute Permissions permissions;\n  [Cached, Constant] readonly attribute GattCharacteristicProperties properties;\n\n  [NewObject] Promise<ArrayBuffer> readValue();\n  [NewObject] Promise<void> writeValue(ArrayBuffer value);\n  [NewObject] Promise<void> startNotifications();\n  [NewObject] Promise<void> stopNotifications();\n  [NewObject] Promise<BluetoothGattDescriptor> addDescriptor(DOMString uuid, Permissions permissions, ArrayBuffer value);\n};\n')),Object(n.b)("h2",{id:"properties"},"Properties"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.service")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns the BluetoothGattService that this characteristic belongs to."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.descriptors")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a cached array containing the BluetoothGattDescriptor objects that describe this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.uuid")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a DOMString representing the UUID of this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.instanceId")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a number representing the instance id of this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.value")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns The cached value of this characteristic. This value can be updated via the ",Object(n.b)("inlineCode",{parentName:"p"},"BluetoothGattCharacteristic.readValue()")," method, characteristic notification, or indication from the remote device."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.permissions")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a bit mask that describes the operations permitted on this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.properties")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Returns a bit mask that describes how to use the characteristic value."),Object(n.b)("h2",{id:"methods"},"Methods"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.readValue()")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Reads the characteristic value from the remote device. The cached value property will also be updated after retrieving the value."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.writeValue()")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Writes the characteristic value to the GATT server. If the local device is the GATT client, the value will be written to the remote GATT server. On the other hand, if the local device is the GATT server, the value will be written to BluetoothGattCharacteristic.value."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.startNotifications()")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Registers notifications/indications for this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.stopNotifications()")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Unregisters notifications/indications for this characteristic."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"strong"},"BluetoothGattCharacteristic.addDescriptor()")))),Object(n.b)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","Adds a descriptor to this characteristic."))}u.isMDXComponent=!0},396:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return d}));var i=r(0),a=r.n(i);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(r),h=i,d=b["".concat(o,".").concat(h)]||b[h]||p[h]||n;return r?a.a.createElement(d,c(c({ref:t},l),{},{components:r})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<n;l++)o[l]=r[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);