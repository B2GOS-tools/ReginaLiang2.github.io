(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{272:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"metadata",(function(){return l})),i.d(t,"rightToc",(function(){return c})),i.d(t,"default",(function(){return d}));var a=i(3),n=i(8),r=(i(0),i(396)),s=i(398),o={id:"security-access-level",title:"Security access level"},l={unversionedId:"02.getting-started/02.main-concepts/security-access-level",id:"02.getting-started/02.main-concepts/security-access-level",isDocsHomePage:!1,title:"Security access level",description:"In this section you will have an overview of KaiOS security framework, which is designed to protect mobile devices from threats to the platform, apps, and data. KaiOS has implemented a comprehensive security model, integrated, and multi-layered security model that delivers best-of-breed protection against security risks to mobile phones.",source:"@site/docs/02.getting-started/02.main-concepts/security-access-level.md",slug:"/02.getting-started/02.main-concepts/security-access-level",permalink:"/docs/02.getting-started/02.main-concepts/security-access-level",version:"current",sidebar:"docs",previous:{title:"Manifest",permalink:"/docs/02.getting-started/02.main-concepts/manifest"},next:{title:"Building with Web technologies",permalink:"/docs/02.getting-started/03.build-your-first-package-app/building-with-web-technologies"}},c=[{value:"Platform Security",id:"platform-security",children:[]},{value:"App Security",id:"app-security",children:[{value:"Trusted and Untrusted Apps",id:"trusted-and-untrusted-apps",children:[]},{value:"Packaged and Hosted Apps",id:"packaged-and-hosted-apps",children:[]},{value:"Security Settings in the App Manifest",id:"security-settings-in-the-app-manifest",children:[]}]},{value:"Security Infrastructure",id:"security-infrastructure",children:[]}],p={rightToc:c};function d(e){var t=e.components,i=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this section you will have an overview of KaiOS security framework, which is designed to protect mobile devices from threats to the platform, apps, and data. KaiOS has implemented a comprehensive security model, integrated, and multi-layered security model that delivers best-of-breed protection against security risks to mobile phones."),Object(r.b)("h2",{id:"platform-security"},"Platform Security"),Object(r.b)("p",null,"The KaiOS platform uses a multi-layered security model that is designed to mitigate exploitation risks at every level. Front-line countermeasures are combined with a defense-in-depth strategy that provides comprehensive protection against threats."),Object(r.b)("p",null,"The KaiOS connects web-based applications to the underlying hardware. It is an integrated technology stack consisting of the following levels:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Gaia"),": The suite of web apps that make up the user experience (apps consist of HTML5, CSS, JavaScript, images, media, and so on)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Gecko"),": The application runtime layer that provides the framework for app execution, and implements the Web APIs used to access features in the mobile device."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Gonk"),": The underlying Linux kernel, system libraries, firmware, and device drivers that everything runs on top of."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"The mobile device"),": The mobile phone running KaiOS.")),Object(r.b)("p",null,"Gecko is the gatekeeper that enforces security policies designed to protect the mobile device from misuse. The Gecko layer acts as the intermediary between web apps (at the Gaia layer) and the phone. Gonk delivers features of the underlying mobile phone hardware directly to the Gecko layer. Web apps access mobile phone functionality only through the Web APIs, and only if Gecko allows the access request \u2014 there is no direct access, no \u201cback door\u201d into the phone. Gecko enforces permissions and prevents access to unauthorized requests."),Object(r.b)("h2",{id:"app-security"},"App Security"),Object(r.b)("p",null,"KaiOS uses a defense-in-depth security strategy to protect the mobile phone from intrusive or malicious applications. This strategy employs a variety of mechanisms, including implicit permission levels based on an app trust model, sandboxed execution at run time, API-only access to the underlying mobile phone hardware, a robust permissions model, and secure installation and update processes. For technical details, refer to Application security."),Object(r.b)("p",null,'In KaiOS, all applications are web apps \u2014 programs written using HTML5, JavaScript, CSS, media, and other open web technologies (pages running within the browser are not referred to as web apps in this context). Because there are no binary ("native") applications installed by the user, all system access is mediated strictly through the Web APIs. Even access to the file system happens only through Web APIs and a back-end SQLite database \u2014 there is no direct access from apps to files stored on the SD card.'),Object(r.b)("p",null,"KaiOS limits and enforces the scope of resources that can be accessed or used by an app, while also supporting a wide range of apps with varying permission levels. Mozilla has implemented tight control over what type of applications can access which APIs. For example, only certified apps (shipped with the phone) can have access to the Telephony API. The Dialer app has privileges to access the Telephony API in order to make phone calls, but not all certified apps can access this API."),Object(r.b)("p",null,"This prevents a situation, for example, in which an arbitrary third-party app gets installed, dials a pay-per-use phone number (900 and 910), and racks up a large cell phone bill."),Object(r.b)("p",null,"Other OEM apps might be selectively given access to the Telephony API, however. For example, an operator might provide a systems management application that allows a customer to manage their account, including the ability to phone the Operator\u2019s billing or support office directly."),Object(r.b)("h3",{id:"trusted-and-untrusted-apps"},"Trusted and Untrusted Apps"),Object(r.b)("p",null,"KaiOS categorizes apps according to the following types:"),Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",null,"Type"),Object(r.b)("th",null,"Trust Level"),Object(r.b)("th",null,"Description"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",null,"Certified"),Object(r.b)("td",null,"Highly Trusted"),Object(r.b)("td",null,"System apps that have been approved by the Operator or OEM (due to risk of device corruption or risk to critical functionality). System apps and services only; not intended for third-party applications.",Object(r.b)("br",null),"This designation is reserved for just a small number of critical applications. Examples: SMS, Bluetooth, camera, system clock, telephony, and the default dialer (to ensure that emergency services are always accessible).")),Object(r.b)("tr",null,Object(r.b)("td",null,"Privileged"),Object(r.b)("td",null,"Trusted"),Object(r.b)("td",null,"Third-party apps that have been reviewed, approved, and digitally signed by an authorized KaiStore.")),Object(r.b)("tr",null,Object(r.b)("td",null,"Web (everything else)"),Object(r.b)("td",null,"Untrusted"),Object(r.b)("td",null,"Regular web content. Includes both installed apps (stored on the mobile phone) and hosted apps (stored remotely, with only an app manifest stored on the mobile phone). The manifest for hosted apps can be obtained through a KaiStore.")))),Object(r.b)("p",null,"An application\u2019s trust level determines, in part, its ability to access mobile phone functionality."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Certified apps have permissions to most Web API operations."),Object(r.b)("li",{parentName:"ul"},"Privileged apps have permissions to a subset of the Web API operations accessible to Certified apps."),Object(r.b)("li",{parentName:"ul"},"Untrusted apps have permissions to a subset of the Web API operations accessible to Privileged apps \u2014 only those Web APIs that contain sufficient security mitigations to be exposed to untrusted web content.")),Object(r.b)("p",null,"Some operations, such as network access, are assumed to be an implicit permission for all apps. In general, the more sensitive the operation (for example, dialing a phone number or accessing the Contacts list), the higher the app trust level required to execute it."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note:")," for more information on the APIs available and their permission levels, consult ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/core-developer-topics/permissions"}),"App permissions"),".")),Object(r.b)("h4",{id:"principle-of-least-permissions"},"Principle of Least Permissions"),Object(r.b)("p",null,"For web apps, the KaiOS security framework follows the principle of least permissions: start with the absolute minimum permissions, then selectively grant additional privileges only when required and reasonable. By default, an app starts with very low permissions, which is comparable to untrusted web content. If the app makes Web API calls that require additional permissions, it must enumerate these additional permissions in its manifest (described later in this document). Gecko will consider granting Web API access to an application only if the applicable privileges are explicitly requested in its manifest. Gecko will grant the requested permission only if the type of the Web App (certified, trusted, or web) is sufficiently qualified for access."),Object(r.b)("h3",{id:"packaged-and-hosted-apps"},"Packaged and Hosted Apps"),Object(r.b)("p",null,"Apps for KaiOS can be either packaged (stored on the mobile phone) or hosted (stored on a remote web server, with just a manifest stored on the mobile phone). There are some differences in the way in which security is managed for each. Nonetheless, packaged and hosted apps are both subject to application sandboxing, which is described later in this document."),Object(r.b)("h4",{id:"packaged-apps"},"Packaged Apps"),Object(r.b)("p",null,"A packaged app consists of a ZIP file containing application resources (HTML5, CSS, JavaScript, images, media), as well as a manifest that provides an explicit list of assets and their corresponding hashes. Certified and privileged apps must be packaged apps because the app manifest needs to be digitally signed. When a user obtains a packaged app, the ZIP file is downloaded onto the mobile phone, and the manifest is read from a known location inside the ZIP file. During the install process, app assets are verified and remain stored locally in the package. All explicit permissions are requested at runtime, showing the user the app's data usage intentions, and persisted by default."),Object(r.b)("p",null,"To refer to app resources in a packaged app, the URL begins with app: using the following format:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"app://identifier/path_within_zipfile/file.html")),Object(r.b)("p",null,"where app:// represents the mount point for the ZIP file, and identifier is a UUID that is generated when the app is installed on the mobile phone. This mechanism ensures that resources referred to with an app: URL are contained in the ZIP file. The path within an app: is relative, so relative links to resources in the ZIP file are allowed."),Object(r.b)("p",null,"While packaged apps are primarily intended to be used for Certified or Privileged apps, regular web apps can also be packaged. However, they do not gain any increase in trust or permissions access simply because they are packaged."),Object(r.b)("h4",{id:"hosted-apps"},"Hosted Apps"),Object(r.b)("p",null,"Hosted apps are located on a web server and loaded via HTTP. Only the app manifest is stored on the mobile phone. Everything else is stored remotely. Certain APIs are available only to privileged and certified apps, which requires the app to be packaged due to signing requirements. Therefore, a hosted app will not have access to any of the Web API operations that require privileged or certified app status."),Object(r.b)("p",null,"From a security point of view, hosted apps work very much like normal websites. A hosted app is loaded by invoking a hard-coded, fully-qualified URL that points to the startup page in the root directory of the app on that web server. Once a hosted app is loaded, the mobile phone links to pages using the same URLs that are used when browsing the web site."),Object(r.b)("h3",{id:"security-settings-in-the-app-manifest"},"Security Settings in the App Manifest"),Object(r.b)("p",null,"The manifest can also contain other settings, including the following security settings:"),Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",null,"Field"),Object(r.b)("th",null,"Description"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",null,"permissions"),Object(r.b)("td",null,"Permissions required by the app. An app must list every Web API it intends to use that requires user permission. Most permissions make sense for privileged apps or certified apps, but not for hosted apps. Properties per API:",Object(r.b)("br",null),Object(r.b)("code",null,"description"),": A string specifying the intent behind requesting use of this API. Required.",Object(r.b)("br",null),Object(r.b)("code",null,"access"),": A string specifying the type of access required for the permission. Implicit permissions are granted at install time. Required for only a few APIs. Accepted values: read, readwrite, readcreate, and createonly.")),Object(r.b)("tr",null,Object(r.b)("td",null,"csp"),Object(r.b)("td",null,"Content Security Policy (CSP). Applied to all pages loaded in the app. Used to harden the app against bugs that would allow an attacker to inject code into the app. If unspecified, privileged and certified apps have system-defined defaults.")),Object(r.b)("tr",null,Object(r.b)("td",null,"type"),Object(r.b)("td",null,"Type of application (web, privileged, or certified).")))),Object(r.b)("p",null,"KaiOS requires that the manifest be served with a specific mime-type ",Object(r.b)("inlineCode",{parentName:"p"},"application/x-web-app-manifest+json")," and from the same fully-qualified host name (origin) from which the app is served. This restriction is relaxed when the manifest app (and thus the app manifest) is same-origin with the page that requested the app to be installed. This mechanism is used to ensure that it's not possible to trick a website into hosting an application manifest."),Object(r.b)("h2",{id:"security-infrastructure"},"Security Infrastructure"),Object(r.b)("p",null,"The following figure shows the components of the KaiOS security framework:"),Object(r.b)("img",{alt:"Security Framework",className:"responsive-img",src:Object(s.a)("img/security-access/securityframework.png")}),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Permission Manager"),": Gateway to accessing functionality in the Web API, which is the only access to the underlying hardware."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Access Control List"),": Matrix of roles and permissions required to access Web API functionality."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Credential Validation"),": Authentication of apps/users."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Permissions Store"),": Set of privileges required to access Web API functionality.")))}d.isMDXComponent=!0},396:function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"b",(function(){return h}));var a=i(0),n=i.n(a);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(i),b=a,h=d["".concat(s,".").concat(b)]||d[b]||u[b]||r;return i?n.a.createElement(h,o(o({ref:t},c),{},{components:i})):n.a.createElement(h,o({ref:t},c))}));function h(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,s=new Array(r);s[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<r;c++)s[c]=i[c];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"},397:function(e,t,i){"use strict";i.r(t);var a=i(0),n=i(23);t.default=function(){var e=Object(a.useContext)(n.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},398:function(e,t,i){"use strict";i.d(t,"b",(function(){return r})),i.d(t,"a",(function(){return s}));var a=i(397),n=i(399);function r(){var e=Object(a.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,i=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,i,a){var r=void 0===a?{}:a,s=r.forcePrependBaseUrl,o=void 0!==s&&s,l=r.absolute,c=void 0!==l&&l;if(!i)return i;if(i.startsWith("#"))return i;if(Object(n.b)(i))return i;if(o)return t+i;var p=i.startsWith(t)?i:t+i.replace(/^\//,"");return c?e+p:p}(r,i,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},399:function(e,t,i){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function n(e){return void 0!==e&&!a(e)}i.d(t,"b",(function(){return a})),i.d(t,"a",(function(){return n}))}}]);