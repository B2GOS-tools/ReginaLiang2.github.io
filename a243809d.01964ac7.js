(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{283:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(8),a=(n(0),n(396)),c={id:"tcpSocket",title:"TCPSocket"},i={unversionedId:"09.migration-from-2.5/next-new-apis/navigator/mozTCPSocket/tcpSocket",id:"version-sfp-3.0/09.migration-from-2.5/next-new-apis/navigator/mozTCPSocket/tcpSocket",isDocsHomePage:!1,title:"TCPSocket",description:"Description",source:"@site/versioned_docs/version-sfp-3.0/09.migration-from-2.5/next-new-apis/navigator/mozTCPSocket/tcpSocket.md",slug:"/09.migration-from-2.5/next-new-apis/navigator/mozTCPSocket/tcpSocket",permalink:"/docs/sfp-3.0/09.migration-from-2.5/next-new-apis/navigator/mozTCPSocket/tcpSocket",version:"sfp-3.0"},l=[{value:"Description",id:"description",children:[]},{value:"API overview",id:"api-overview",children:[]},{value:"Properties",id:"properties",children:[{value:"Events handler",id:"events-handler",children:[]}]},{value:"Methods",id:"methods",children:[]}],b={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket")," interface provides access to a raw TCP socket."),Object(a.b)("p",null,"The main entry point for this API is the ",Object(a.b)("inlineCode",{parentName:"p"},"navigator.mozTCPSocket")," property which is a ",Object(a.b)("strong",{parentName:"p"},"TCPSocket")," object."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note: Only certified apps can accept incoming connections on a port below 1024.")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"api-overview"},"API overview"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-cpp"}),"interface TCPSocket{\n  readonly attribute DOMString host;\n  readonly attribute unsigned short port;\n  readonly attribute boolean ssl;\n  readonly attribute unsigned long bufferedAmount;\n  readonly attribute DOMString binaryType;\n  readonly attribute DOMString readyState;\n\n  TCPSocket open(DOMString host, unsigned short port, [object options]);\n  TCPServerSocket listen(unsigned short port, [object options, [unsigned short backlog]]);\n  void upgradeToSecure();\n  void suspend();\n  void resume();\n  void close();\n  boolean send(in jsval data);\n\n  attribute onopen;\n  attribute ondrain;\n  attribute ondata;\n  attribute onerror;\n  attribute onclose;\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.host"),"  Read only"),Object(a.b)("p",null,"A string representing the host name of the server the socket is connected to."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.port")," Read only"),Object(a.b)("p",null,"A number representing the port the socket is connected to."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.ssl")," Read only"),Object(a.b)("p",null,"A boolean indicating whether the socket is encrypted with SSL (",Object(a.b)("inlineCode",{parentName:"p"},"true"),") or not (",Object(a.b)("inlineCode",{parentName:"p"},"false"),")."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.bufferedAmount")," Read only"),Object(a.b)("p",null,"The number of bytes of not-yet-sent data in the socket buffered."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.binaryType")," Read only"),Object(a.b)("p",null,"The type of data used. Possible value is arraybuffer or string."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.readyState")," Read only"),Object(a.b)("p",null,"The socket state. Possible value is connecting, open, closing, or closed."),Object(a.b)("h3",{id:"events-handler"},"Events handler"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.onopen")),Object(a.b)("p",null,"A handler for the open event. After this event, the socket is ready to send and receive data."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.ondrain")),Object(a.b)("p",null,"A handler for the drain event. This event is triggered each time the buffer of data is flushed."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.onerror")),Object(a.b)("p",null,"A handler for the error event."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.ondata")),Object(a.b)("p",null,"A handler for the data event. This event is triggered each time data has been received."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.onclose")),Object(a.b)("p",null,"A handler for the close event."),Object(a.b)("hr",null),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.close()")),Object(a.b)("p",null,"Closes the connection."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.open(host, port [, options])")),Object(a.b)("p",null,"Returns a new TCPSocket object connected to the given host at the given port."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.listen(port [, options [, backlog]])")),Object(a.b)("p",null,"Returns a new TCPServerSocket object listening at the given port."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.resume()")),Object(a.b)("p",null,"Resumes the data events."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.send(data)")),Object(a.b)("p",null,"Buffers data to be sent across the network."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.suspend()")),Object(a.b)("p",null,"Pauses the data events."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TCPSocket.upgradeToSecure()")),Object(a.b)("p",null,"Enables secure on channel."))}p.isMDXComponent=!0},396:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=o,O=s["".concat(c,".").concat(d)]||s[d]||u[d]||a;return n?r.a.createElement(O,i(i({ref:t},b),{},{components:n})):r.a.createElement(O,i({ref:t},b))}));function O(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var b=2;b<a;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);